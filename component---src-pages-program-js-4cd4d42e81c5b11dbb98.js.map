{"version":3,"sources":["webpack:///./src/components/program/InlineEvent.js","webpack:///./src/components/program/InlineDay.js","webpack:///./src/pages/program.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/VismaLogo.js","webpack:///./src/components/layout/Header.js","webpack:///./src/components/layout/Layout.js"],"names":["InlineEvent","_ref","event","_ref$subeventsForDay","subeventsForDay","frontmatter","tidspunkt","DateTime","fromISO","from","setLocale","toFormat","underposterTilSiden","subevents","underposterAaVise","filter","underpost","includes","fields","slug","react_default","a","createElement","className","style","marginBottom","border","backgroundColor","paddingBottom","title","kategori","speaker","index_es","icon","faUser","location","faMapMarker","map","subevent","fra","split","til","to","fontSize","key","href","dangerouslySetInnerHTML","__html","html","InlineDay","dag","day","events","charAt","toUpperCase","slice","program_InlineEvent","id","__webpack_exports__","_ref$data","data","currentFagsamling","site","siteMetadata","posts","allMarkdownRemark","edges","item","node","mainEvents","type","subEvents","postsByDay","groupByFra","substring","subeventsByDay","Layout","faCalendarAlt","Array","_ref2","value","get","program_InlineDay","list","keyGetter","Map","forEach","collection","push","set","query","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","gatsby_browser_entry","gatsby_image_default","fixed","fileName","childImageSharp","_3080975758","Header","_useState","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","layout_VismaLogo","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","siteTitle","defaultProps","Fragment","layout_Header","role"],"mappings":"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","file":"component---src-pages-program-js-4cd4d42e81c5b11dbb98.js","sourcesContent":["import React from \"react\"\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faMapMarker, faUser} from '@fortawesome/free-solid-svg-icons'\nimport './list-group-programpost-overrides.css'\nimport {DateTime} from 'luxon'\n\nconst InlineEvent = ({event, subeventsForDay = []}) => {\n    const {frontmatter} = event;\n\n    const tidspunkt = DateTime.fromISO(frontmatter.from).setLocale('nb').toFormat('HH:mm');\n    const underposterTilSiden = frontmatter.subevents || [];\n    const underposterAaVise = subeventsForDay.filter(underpost => underposterTilSiden.includes(underpost.fields.slug));\n    return (\n        <div className=\"card programpost\" style={{marginBottom: '10px', border: 'none', backgroundColor: '#F0F2F5'}}>\n            <div className=\"card-body\" style={{paddingBottom: '5px'}}>\n                <h6>{tidspunkt} - {frontmatter.title}</h6>\n                <ul style={{marginBottom: '10px'}} className=\"list-group list-group-horizontal\">\n                    {frontmatter.kategori &&\n                    <li className=\"list-group-item list-group-item-primary\">\n                        {frontmatter.kategori}\n                    </li>}\n                    {frontmatter.speaker && <li className=\"list-group-item\">\n                        <span className=\"badge\"><FontAwesomeIcon icon={faUser}/></span>\n                        {frontmatter.speaker}\n                    </li>}\n                    {frontmatter.location && <li className=\"list-group-item\">\n                        <span className=\"badge\"><FontAwesomeIcon icon={faMapMarker}/></span>\n                        {frontmatter.location}\n                    </li>}\n                </ul>\n                <div>\n                    {underposterAaVise.map(subevent => {\n                        const fra = subevent.frontmatter.from.split('T')[1];\n                        const til = subevent.frontmatter.to.split('T')[1];\n                        return <div style={{fontSize: '0.7em'}} key={subevent.fields.slug}>\n                            {fra}-{til} <a href={subevent.fields.slug}>{subevent.frontmatter.title}</a>\n                        </div>\n                    })}\n                </div>\n                <p dangerouslySetInnerHTML={{__html: event.html}}/>\n            </div>\n        </div>\n    )\n};\nexport default InlineEvent\n","import React from \"react\"\nimport InlineEvent from \"./InlineEvent\";\nimport {DateTime} from \"luxon\";\n\nconst capitalizeFirst = function(dag) {\n    return dag.charAt(0).toUpperCase() + dag.slice(1)\n};\n\nconst InlineDay = ({day, events, subeventsForDay}) => {\n    return (\n        <div className=\"col-sm\">\n            <h2>{capitalizeFirst(DateTime.fromISO(day).setLocale('nb').toFormat('EEEE'))}</h2>\n            {events.map(event => {\n                return <InlineEvent key={event.id} event={event} subeventsForDay={subeventsForDay} />\n            })}\n        </div>\n    )\n};\nexport default InlineDay\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/layout/Layout\"\nimport InlineDay from \"../components/program/InlineDay\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default ({data = {}}) => {\n    const {currentFagsamling} = data.site.siteMetadata;\n    const posts = data.allMarkdownRemark.edges\n        .filter(item => item.node.fields.slug.includes(currentFagsamling))\n        .map(item => item.node);\n    const mainEvents = posts.filter(event => event.frontmatter.type !== 'underprogrampost');\n    const subEvents = posts.filter(event => event.frontmatter.type === 'underprogrampost');\n    const postsByDay = groupByFra(mainEvents, event => event.frontmatter.from.substring(0, 10));\n    const subeventsByDay = groupByFra(subEvents, event => event.frontmatter.from.substring(0, 10));\n    return (\n        <Layout>\n            <h1 style={{marginBottom: '30px'}}>\n                <FontAwesomeIcon style={{fontSize: '0.8em'}} icon={faCalendarAlt}/> Program\n            </h1>\n            <div className=\"row\">\n                {Array.from(postsByDay, ([key, value]) => {\n                    const subeventsForDay = subeventsByDay.get(key);\n                    return <InlineDay key={key} day={key} events={value} subeventsForDay={subeventsForDay} />\n                })\n                }\n            </div>\n        </Layout>\n    )\n}\n\nfunction groupByFra(list, keyGetter) {\n    const map = new Map();\n    list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        currentFagsamling\n      }\n    }\n    allMarkdownRemark(sort: {fields: [frontmatter___from], order: ASC}) {\n      totalCount\n      edges {\n        node {\n          id\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            location\n            from\n            to\n            category\n            type\n            speaker\n            subevents\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo-smaller.png\" }) {\n          childImageSharp {\n            fixed(height: 65) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\nimport {Link} from \"gatsby\"\nimport {Nav, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler} from \"reactstrap\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (<Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n            <NavbarBrand href=\"/\">\n                <VismaLogo/>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/\">Hjem <span className=\"sr-only\">(current)</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/program/\">Program</Link>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport './layout.css'\nimport Header from \"./Header\"\n\nconst Layout = ({children}) => {\n    return (\n        <>\n            <Header/>\n            <main role=\"main\" className=\"container\">{children}</main>\n            {/*<footer className=\"container-fluid\">*/}\n            {/*© {new Date().getFullYear()}, Built with*/}\n            {/*{` `}*/}\n            {/*<a href=\"https://www.gatsbyjs.org\">Gatsby</a>*/}\n            {/*</footer>*/}\n        </>\n    );\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}