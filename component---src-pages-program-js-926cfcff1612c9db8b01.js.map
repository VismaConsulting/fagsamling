{"version":3,"sources":["webpack:///./src/components/program/InlineEvent.js","webpack:///./src/components/program/InlineDay.js","webpack:///./src/pages/program.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/VismaLogo.js","webpack:///./src/components/layout/Header.js","webpack:///./src/components/layout/Layout.js","webpack:///./src/components/program/EventMetaData.js","webpack:///./src/utils/groupBy.js"],"names":["eventSort","a","b","result","frontmatter","group","localeCompare","InlineEvent","_ref","event","tidspunkt","DateTime","fromISO","from","setLocale","toFormat","underposterAaVise","fields","subevents","react_default","createElement","className","style","marginBottom","border","backgroundColor","paddingBottom","href","slug","title","EventMetaData","fontSize","description","sort","map","subevent","fontWeight","category","fra","split","til","to","key","id","InlineDay","dag","day","events","charAt","toUpperCase","slice","program_InlineEvent","__webpack_exports__","location","_ref$data","data","currentFagsamling","site","siteMetadata","console","log","edges","mainEvents","filter","item","node","includes","page_subtype","postsByDay","groupBy","substring","Layout","crumbLabel","index_es","icon","faCalendarAlt","Array","_ref2","value","program_InlineDay","query","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","gatsby_browser_entry","gatsby_image_default","fixed","fileName","childImageSharp","_3080975758","Header","_useState","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","layout_VismaLogo","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","siteTitle","defaultProps","breadcrumbs","containerClass","fullWidth","Fragment","layout_Header","aria-label","crumb","classNames","current","label","role","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","kategori","speaker","faUser","faMapMarker","list","keyGetter","Map","forEach","collection","get","push","set"],"mappings":"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","file":"component---src-pages-program-js-926cfcff1612c9db8b01.js","sourcesContent":["import React from \"react\"\nimport './list-group-programpost-overrides.css'\nimport {DateTime} from 'luxon'\nimport EventMetaData from './EventMetaData'\n\nconst eventSort = (a, b) => {\n    let result = 0;\n    if (a.frontmatter.group && b.frontmatter.group) {\n        result = a.frontmatter.group.localeCompare(b.frontmatter.group)\n    }\n    return result;\n\n};\n\nconst InlineEvent = ({event}) => {\n    const {frontmatter} = event;\n\n    const tidspunkt = DateTime.fromISO(frontmatter.from).setLocale('nb').toFormat('HH:mm');\n    const underposterAaVise = event.fields.subevents;\n    return (\n        <div className=\"card programpost\" style={{marginBottom: '10px', border: 'none', backgroundColor: '#F0F2F5'}}>\n            <div className=\"card-body\" style={{paddingBottom: '5px'}}>\n                <h6><a href={event.fields.slug}>{tidspunkt} - {frontmatter.title}</a></h6>\n                <EventMetaData {...frontmatter} />\n                <p style={{fontSize: '0.8em'}}>{frontmatter.description}</p>\n                <div>\n                    {underposterAaVise\n                        .sort(eventSort)\n                        .map(subevent => {\n                            const style = {\n                                fontSize: '0.7em',\n                                fontWeight: subevent.frontmatter.category === 'Breakout session' ? 'bold' : 'normal'\n                            };\n                            const fra = subevent.frontmatter.from.split('T')[1];\n                            const til = subevent.frontmatter.to.split('T')[1];\n                            return <div style={style} key={subevent.id}>\n                            {fra}-{til} <a href={subevent.fields.slug}>{subevent.frontmatter.title}</a>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n};\nexport default InlineEvent\n","import React from \"react\"\nimport InlineEvent from \"./InlineEvent\";\nimport {DateTime} from \"luxon\";\n\nconst capitalizeFirst = function(dag) {\n    return dag.charAt(0).toUpperCase() + dag.slice(1)\n};\n\nconst InlineDay = ({day, events}) => {\n    return (\n        <div className=\"col-sm\">\n            <h2>{capitalizeFirst(DateTime.fromISO(day).setLocale('nb').toFormat('EEEE'))}</h2>\n            {events.map(event => {\n                return <InlineEvent key={event.id} event={event} />\n            })}\n        </div>\n    )\n};\nexport default InlineDay\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/layout/Layout\"\nimport InlineDay from \"../components/program/InlineDay\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCalendarAlt} from '@fortawesome/free-solid-svg-icons'\nimport '../components/graphql/fragments/CommonEventFragment'\nimport groupBy from \"../utils/groupBy\";\n\nexport default ({location, data = {}}) => {\n    const {currentFagsamling} = data.site.siteMetadata;\n    console.log(data.events.edges)\n    const posts = data.events.edges\n        .filter(item => item.node.fields.slug.includes(currentFagsamling))\n        .map(item => item.node);\n    const mainEvents = posts.filter(event => event.frontmatter.page_subtype !== 'subevent');\n    const postsByDay = groupBy(mainEvents, event => event.frontmatter.from.substring(0, 10));\n    return (\n        <Layout location={location} crumbLabel=\"Program\">\n            <h1 style={{marginBottom: '30px'}}>\n                <FontAwesomeIcon style={{fontSize: '0.8em'}} icon={faCalendarAlt}/> Program\n            </h1>\n            <div className=\"row\">\n                {Array.from(postsByDay, ([key, value]) => {\n                    return <InlineDay key={key} day={key} events={value} />\n                })\n                }\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        currentFagsamling\n      }\n    }\n    events: allMarkdownRemark(filter: {frontmatter: { page_type: { eq: \"event\" }}}, sort: {fields: [frontmatter___from], order: ASC}) {\n      totalCount\n      edges {\n        node {\n         ...CommonEventFragment\n          fields {\n            subevents {\n              id\n              html\n              fields {\n                slug\n              }\n              excerpt\n              ...CommonEventFragment\n            }\n          }\n        }\n      }\n    }\n  }\n`\n;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo-smaller.png\" }) {\n          childImageSharp {\n            fixed(height: 65) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\nimport {Link} from \"gatsby\"\nimport {Nav, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler} from \"reactstrap\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (<Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n            <NavbarBrand href=\"/\">\n                <VismaLogo/>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/\">Hjem <span className=\"sr-only\">(current)</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/program/\">Program</Link>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport './layout.css'\nimport Header from \"./Header\"\n\nconst Layout = ({children, breadcrumbs, fullWidth}) => {\n    const containerClass = fullWidth ? 'container-fluid' : 'container';\n    return (\n        <>\n            <Header />\n            {breadcrumbs && <div className=\"container\"><nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    {breadcrumbs.map(crumb => {\n                            const classNames = \"breadcrumb-item\" + (crumb.current ? ' active' : '');\n                            const label = crumb.current ? crumb.label : <a href={crumb.slug}>{crumb.label}</a>\n                            return (\n                                <li key={crumb.label} className={classNames}>{label}</li>\n                            )\n                        }\n                    )}\n                </ol>\n            </nav></div>\n            }\n            <main role=\"main\" className={containerClass}>{children}</main>\n        </>\n    );\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMapMarker, faUser} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nconst EventMetaData = ({kategori, speaker, location}) => {\n    return (\n        <ul style={{marginBottom: '10px'}} className=\"list-group list-group-horizontal\">\n            {kategori &&\n            <li className=\"list-group-item list-group-item-primary\">\n                {kategori}\n            </li>}\n            {speaker && <li className=\"list-group-item\">\n                <span className=\"badge\"><FontAwesomeIcon icon={faUser}/></span>\n                {speaker}\n            </li>}\n            {location && <li className=\"list-group-item\">\n                <span className=\"badge\"><FontAwesomeIcon icon={faMapMarker}/></span>\n                {location}\n            </li>}\n        </ul>\n    );\n}\n\nexport default EventMetaData","function groupBy(list, keyGetter) {\n    const map = new Map();\n    list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n\nexport default groupBy"],"sourceRoot":""}