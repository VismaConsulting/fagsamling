{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/VismaLogo.js","webpack:///./src/components/header2.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","react_default","gatsby_browser_entry","gatsby_image_default","fixed","fileName","childImageSharp","_2052074748","Header","siteTitle","className","href","components_VismaLogo","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-disabled","aria-haspopup","aria-labelledby","defaultProps","Layout","Fragment","header2","site","siteMetadata","role","_755544856","node","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-2532d07d4429ccda7832.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo.png\" }) {\n          childImageSharp {\n            fixed(height: 100) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\n\nconst Header = ({siteTitle}) => (\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n        <a className=\"navbar-brand\" href=\"#\">\n            <VismaLogo/>\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n                aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Link</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\n                </li>\n                <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown01\" data-toggle=\"dropdown\"\n                       aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n                        <a className=\"dropdown-item\" href=\"#\">Action</a>\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </nav>\n)\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, StaticQuery} from \"gatsby\"\n\nimport Header from \"./header2\"\n\nconst Layout = ({children}) => (\n    <StaticQuery\n        query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n        render={data => (\n            <>\n                <Header siteTitle={data.site.siteMetadata.title}/>\n                <main role=\"main\" className=\"container\">{children}</main>\n                {/*<footer className=\"container-fluid\">*/}\n                    {/*© {new Date().getFullYear()}, Built with*/}\n                    {/*{` `}*/}\n                    {/*<a href=\"https://www.gatsbyjs.org\">Gatsby</a>*/}\n                {/*</footer>*/}\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}