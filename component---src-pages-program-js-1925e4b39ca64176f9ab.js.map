{"version":3,"sources":["webpack:///./src/components/programpost.js","webpack:///./src/components/dag.js","webpack:///./src/pages/program.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/VismaLogo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Programpost","_ref","post","frontmatter","tidspunkt","fra","split","react_default","a","createElement","className","style","marginBottom","border","backgroundColor","paddingBottom","title","type","speaker","index_es","icon","faUser","sted","faMapMarker","dangerouslySetInnerHTML","__html","html","Dag","dag","poster","charAt","toUpperCase","slice","capitalizeFirst","DateTime","fromISO","setLocale","toFormat","map","edge","programpost","key","node","id","__webpack_exports__","list","keyGetter","_ref$data","data","posts","allMarkdownRemark","edges","postsByDay","item","substring","Map","forEach","collection","get","push","set","layout","fontSize","faCalendarAlt","Array","from","_ref2","value","components_dag","query","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","gatsby_browser_entry","gatsby_image_default","fixed","fileName","childImageSharp","_3080975758","Header","_useState","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","components_VismaLogo","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","siteTitle","defaultProps","Layout","Fragment","header","site","siteMetadata","role","_755544856"],"mappings":"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","file":"component---src-pages-program-js-1925e4b39ca64176f9ab.js","sourcesContent":["import React from \"react\"\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faMapMarker, faUser} from '@fortawesome/free-solid-svg-icons'\nimport './list-group-programpost-overrides.css'\n\nconst Programpost = ({post}) => {\n    const {frontmatter} = post;\n    const tidspunkt = frontmatter.fra.split('T')[1];\n    return (\n        <div className=\"card programpost\" style={{marginBottom: '10px', border: 'none', backgroundColor: '#F0F2F5'}}>\n            <div className=\"card-body\" style={{paddingBottom: '5px'}}>\n                <h6>{tidspunkt} - {frontmatter.title}</h6>\n                <ul className=\"list-group list-group-horizontal\">\n                    {frontmatter.type &&\n                    <li className=\"list-group-item list-group-item-primary\">\n                        {frontmatter.type}\n                    </li>}\n                    {frontmatter.speaker && <li className=\"list-group-item\">\n                        <span className=\"badge\"><FontAwesomeIcon icon={faUser}/></span>\n                        {frontmatter.speaker}\n                    </li>}\n                    {frontmatter.sted && <li className=\"list-group-item\">\n                        <span className=\"badge\"><FontAwesomeIcon icon={faMapMarker}/></span>\n                        {frontmatter.sted}\n                    </li>}\n                </ul>\n                <p dangerouslySetInnerHTML={{__html: post.html}}/>\n            </div>\n        </div>\n    )\n};\nexport default Programpost\n","import React from \"react\"\nimport Programpost from \"../components/programpost\";\nimport {DateTime} from 'luxon'\n\nconst capitalizeFirst = function(dag) {\n    return dag.charAt(0).toUpperCase() + dag.slice(1)\n}\n\nconst Dag = ({dag, poster}) => {\n    return (\n        <div className=\"col-sm\">\n            <h2>{capitalizeFirst(DateTime.fromISO(dag).setLocale('nb').toFormat('EEEE'))}</h2>\n            {poster.map(edge => {\n                return <Programpost key={edge.node.id} post={edge.node} />\n            })}\n        </div>\n    )\n};\nexport default Dag\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Dag from \"../components/dag\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default ({data = {}}) => {\n    const posts = data.allMarkdownRemark.edges;\n    const postsByDay = groupByFra(posts, item => item.node.frontmatter.fra.substring(0, 10));\n    return (\n        <Layout>\n            <h1 style={{marginBottom: '30px'}}>\n                <FontAwesomeIcon style={{fontSize: '0.8em'}} icon={faCalendarAlt}/> Program\n            </h1>\n            <div className=\"row\">\n                {Array.from(postsByDay, ([key, value]) =>\n                    <Dag key={key} dag={key} poster={value}/>)\n                }\n            </div>\n        </Layout>\n    )\n}\n\n\nfunction groupByFra(list, keyGetter) {\n    const map = new Map();\n    list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {fields: [frontmatter___fra], order: ASC}) {\n      totalCount\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            sted\n            fra\n            til\n            type\n            speaker\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo-smaller.png\" }) {\n          childImageSharp {\n            fixed(height: 65) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\nimport {Link} from \"gatsby\"\nimport {Nav, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler} from \"reactstrap\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (<Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n            <NavbarBrand href=\"/\">\n                <VismaLogo/>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/\">Hjem <span className=\"sr-only\">(current)</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/program/\">Program</Link>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, StaticQuery} from \"gatsby\"\nimport './layout.css'\nimport Header from \"./header\"\n\nconst Layout = ({children}) => (\n    <StaticQuery\n        query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n        render={data => (\n            <>\n                <Header siteTitle={data.site.siteMetadata.title}/>\n                <main role=\"main\" className=\"container\">{children}</main>\n                {/*<footer className=\"container-fluid\">*/}\n                    {/*© {new Date().getFullYear()}, Built with*/}\n                    {/*{` `}*/}\n                    {/*<a href=\"https://www.gatsbyjs.org\">Gatsby</a>*/}\n                {/*</footer>*/}\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}