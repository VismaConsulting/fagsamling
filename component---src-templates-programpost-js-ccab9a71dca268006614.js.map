{"version":3,"sources":["webpack:///./src/templates/programpost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/VismaLogo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","luxon__WEBPACK_IMPORTED_MODULE_2__","_ref","dag","post","data","markdownRemark","ukedag","DateTime","fromISO","frontmatter","fra","setLocale","toFormat","charAt","toUpperCase","slice","til","a","createElement","style","color","title","dangerouslySetInnerHTML","__html","html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","react_default","gatsby_browser_entry","gatsby_image_default","fixed","fileName","childImageSharp","_3080975758","Header","_useState","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","components_VismaLogo","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","to","siteTitle","defaultProps","Layout","Fragment","header","site","siteMetadata","role","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KASeE,EAAA,iBAAAQ,GAAc,IAJIC,EAKvBC,EADmBF,EAAXG,KACIC,eACZC,GANuBJ,EAMEK,WAASC,QAAQL,EAAKM,YAAYC,KAAKC,UAAU,MAAMC,SAAS,SALpFC,OAAO,GAAGC,cAAgBZ,EAAIa,MAAM,GAMzCL,EAAMH,WAASC,QAAQL,EAAKM,YAAYC,KAAKE,SAAS,SACtDI,EAAMT,WAASC,QAAQL,EAAKM,YAAYO,KAAKJ,SAAS,SAC5D,OACIf,EAAAoB,EAAAC,cAACnB,EAAA,EAAD,KACIF,EAAAoB,EAAAC,cAAA,WACIrB,EAAAoB,EAAAC,cAAA,MAAIC,MAAO,CAACC,MAAO,UAAWd,EAA9B,IAAuCI,EAAvC,MAA+CM,GAC/CnB,EAAAoB,EAAAC,cAAA,UAAKf,EAAKM,YAAYY,OACtBxB,EAAAoB,EAAAC,cAAA,OAAKI,wBAAyB,CAAEC,OAAQpB,EAAKqB,WAMtD,IAAM7B,EAAK,8CCzBlBJ,EAAAG,EAAAD,EAAA,sBAAAgC,IAAA,IAAA7B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA8B,EAAAnC,EAAA,GAAAoC,EAAApC,EAAAO,EAAA4B,GAAAE,EAAArC,EAAA,IAAAsC,EAAAtC,EAAAO,EAAA8B,GAAArC,EAAAG,EAAAD,EAAA,sBAAAoC,EAAAZ,IAAA1B,EAAA,SAYMuC,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBpC,EAAAoB,EAAAC,cAACY,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM7B,MACL+B,EAAgBF,EAAMtC,QAAUwC,EAAgBF,EAAMtC,OAAOS,MAEtD6B,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAM7B,KAAO6B,EAAM7B,KAAKA,KAAO+B,EAAgBF,EAAMtC,OAAOS,MAGvDP,EAAAoB,EAAAC,cAAA,uCA4BfO,EAAYa,UAAY,CACtBlC,KAAMmC,IAAUC,OAChB7C,MAAO4C,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kMCMzCK,EAAmB,SAAAhD,GAAkB,IAAfiD,EAAejD,EAAfiD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvB,IAAMb,cAAcqC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,qsCCDAW,EAhBG,kBAChBC,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACEnE,MAAK,aAWLyC,OAAQ,SAAAhC,GAAI,OAAIyD,EAAA5C,EAAAC,cAAC6C,EAAA9C,EAAD,CAAK+C,MAAO5D,EAAK6D,SAASC,gBAAgBF,SAZ5D5D,KAAA+D,oECEIC,EAAS,WAAM,IAAAC,EACWC,oBAAS,GAA9BC,EADUF,EAAA,GACFG,EADEH,EAAA,GAGjB,OAAQR,EAAA5C,EAAAC,cAACuD,EAAA,EAAD,CAAQrD,MAAM,QAAQsD,OAAK,EAACC,OAAO,KAAKX,MAAM,OAC9CH,EAAA5C,EAAAC,cAAC0D,EAAA,EAAD,CAAaC,KAAK,KACdhB,EAAA5C,EAAAC,cAAC4D,EAAD,OAEJjB,EAAA5C,EAAAC,cAAC6D,EAAA,EAAD,CAAeC,QAAS,kBAAMR,GAAWD,MACzCV,EAAA5C,EAAAC,cAAC+D,EAAA,EAAD,CAAUV,OAAQA,EAAQW,QAAM,GAC5BrB,EAAA5C,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC3BrB,EAAA5C,EAAAC,cAACmE,EAAA,EAAD,KACIxB,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CAAMsB,UAAU,WAAWE,GAAG,KAA9B,QAAuCzB,EAAA5C,EAAAC,cAAA,QAAMkE,UAAU,WAAhB,eAE3CvB,EAAA5C,EAAAC,cAACmE,EAAA,EAAD,KACIxB,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CAAMsB,UAAU,WAAWE,GAAG,aAA9B,gBAQxBlB,EAAO9B,UAAY,CACfiD,UAAWhD,IAAUE,QAGzB2B,EAAOoB,aAAe,CAClBD,UAAS,IAGEnB,QCxBTqB,EAAS,SAAAxF,GAAA,IAAEoC,EAAFpC,EAAEoC,SAAF,OACXwB,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACInE,MAAK,YASLyC,OAAQ,SAAAhC,GAAI,OACRyD,EAAA5C,EAAAC,cAAA2C,EAAA5C,EAAAyE,SAAA,KACI7B,EAAA5C,EAAAC,cAACyE,EAAD,CAAQJ,UAAWnF,EAAKwF,KAAKC,aAAaxE,QAC1CwC,EAAA5C,EAAAC,cAAA,QAAM4E,KAAK,OAAOV,UAAU,aAAa/C,KAbrDjC,KAAA2F,KAwBJN,EAAOnD,UAAY,CACfD,SAAUE,IAAUyD,KAAKtD,YAGd+C","file":"component---src-templates-programpost-js-ccab9a71dca268006614.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport {DateTime} from 'luxon'\n\nconst capitalizeFirst = function(dag) {\n    return dag.charAt(0).toUpperCase() + dag.slice(1)\n};\n\nexport default ({ data }) => {\n    const post = data.markdownRemark;\n    const ukedag = capitalizeFirst(DateTime.fromISO(post.frontmatter.fra).setLocale('nb').toFormat('EEEE'));\n    const fra = DateTime.fromISO(post.frontmatter.fra).toFormat('HH:mm');\n    const til = DateTime.fromISO(post.frontmatter.til).toFormat('HH:mm');\n    return (\n        <Layout>\n            <div>\n                <h3 style={{color: 'black'}}>{ukedag} {fra} - {til}</h3>\n                <h2>{post.frontmatter.title}</h2>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        fra\n        til\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo-smaller.png\" }) {\n          childImageSharp {\n            fixed(height: 65) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\nimport {Link} from \"gatsby\"\nimport {Nav, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler} from \"reactstrap\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (<Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n            <NavbarBrand href=\"/\">\n                <VismaLogo/>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/\">Hjem <span className=\"sr-only\">(current)</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/program/\">Program</Link>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, StaticQuery} from \"gatsby\"\nimport './layout.css'\nimport Header from \"./header\"\n\nconst Layout = ({children}) => (\n    <StaticQuery\n        query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n        render={data => (\n            <>\n                <Header siteTitle={data.site.siteMetadata.title}/>\n                <main role=\"main\" className=\"container\">{children}</main>\n                {/*<footer className=\"container-fluid\">*/}\n                    {/*© {new Date().getFullYear()}, Built with*/}\n                    {/*{` `}*/}\n                    {/*<a href=\"https://www.gatsbyjs.org\">Gatsby</a>*/}\n                {/*</footer>*/}\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}