{"version":3,"sources":["webpack:///./src/templates/EventPage.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/VismaLogo.js","webpack:///./src/components/layout/Header.js","webpack:///./src/components/layout/Layout.js","webpack:///./src/components/program/EventMetaData.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_Layout__WEBPACK_IMPORTED_MODULE_1__","luxon__WEBPACK_IMPORTED_MODULE_2__","_components_program_EventMetaData__WEBPACK_IMPORTED_MODULE_3__","_ref","dag","event","data","weekday","DateTime","fromISO","frontmatter","from","setLocale","toFormat","charAt","toUpperCase","slice","formatTime","time","to","a","createElement","style","color","title","dangerouslySetInnerHTML","__html","html","fields","subevents","map","subevent","key","id","className","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","react_default","gatsby_browser_entry","gatsby_image_default","fixed","fileName","childImageSharp","_3080975758","Header","_useState","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","layout_VismaLogo","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","siteTitle","defaultProps","Layout","Fragment","layout_Header","role","node","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","EventMetaData","kategori","speaker","marginBottom","icon","faUser","faMapMarker"],"mappings":"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","file":"component---src-templates-event-page-js-e9788911cbcf330a45ee.js","sourcesContent":["import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/layout/Layout\"\nimport {DateTime} from 'luxon'\nimport EventMetaData from \"../components/program/EventMetaData\";\nimport '../components/graphql/fragments/CommonEventFragment'\n\nconst capitalizeFirst = function (dag) {\n    return dag.charAt(0).toUpperCase() + dag.slice(1)\n};\n\nexport default ({data}) => {\n    const {event} = data;\n    const weekday = capitalizeFirst(DateTime.fromISO(event.frontmatter.from).setLocale('nb').toFormat('EEEE'));\n\n    function formatTime(time) {\n        return DateTime.fromISO(time).toFormat('HH:mm');\n    }\n\n    const from = formatTime(event.frontmatter.from);\n    const to = formatTime(event.frontmatter.to);\n    return (\n        <Layout>\n            <div>\n                <h3 style={{color: 'black'}}>{weekday} {from} - {to}</h3>\n                <h2>{event.frontmatter.title}</h2>\n                <EventMetaData {...event.frontmatter} />\n                <div dangerouslySetInnerHTML={{__html: event.html}}/>\n                {event.fields.subevents.map(subevent => {\n                    return (\n                        <div key={subevent.id} className=\"card programpost\">\n                            <div className=\"card-body\">\n                                {formatTime(subevent.frontmatter.from)} - {formatTime(subevent.frontmatter.to)} {subevent.frontmatter.title}\n                                <EventMetaData {...subevent.frontmatter} />\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`  \nquery($slug: String!) {\n    event: markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        subevents {\n          ...CommonEventFragment\n        }\n      }\n      ...CommonEventFragment\n  }\n}\n  \n  \n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo-smaller.png\" }) {\n          childImageSharp {\n            fixed(height: 65) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\nimport {Link} from \"gatsby\"\nimport {Nav, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler} from \"reactstrap\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (<Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n            <NavbarBrand href=\"/\">\n                <VismaLogo/>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/\">Hjem <span className=\"sr-only\">(current)</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/program/\">Program</Link>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport './layout.css'\nimport Header from \"./Header\"\n\nconst Layout = ({children}) => {\n    return (\n        <>\n            <Header/>\n            <main role=\"main\" className=\"container\">{children}</main>\n            {/*<footer className=\"container-fluid\">*/}\n            {/*© {new Date().getFullYear()}, Built with*/}\n            {/*{` `}*/}\n            {/*<a href=\"https://www.gatsbyjs.org\">Gatsby</a>*/}\n            {/*</footer>*/}\n        </>\n    );\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMapMarker, faUser} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nconst EventMetaData = ({kategori, speaker, location}) => {\n    return (\n        <ul style={{marginBottom: '10px'}} className=\"list-group list-group-horizontal\">\n            {kategori &&\n            <li className=\"list-group-item list-group-item-primary\">\n                {kategori}\n            </li>}\n            {speaker && <li className=\"list-group-item\">\n                <span className=\"badge\"><FontAwesomeIcon icon={faUser}/></span>\n                {speaker}\n            </li>}\n            {location && <li className=\"list-group-item\">\n                <span className=\"badge\"><FontAwesomeIcon icon={faMapMarker}/></span>\n                {location}\n            </li>}\n        </ul>\n    );\n}\n\nexport default EventMetaData"],"sourceRoot":""}