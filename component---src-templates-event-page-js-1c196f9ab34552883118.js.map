{"version":3,"sources":["webpack:///./src/templates/EventPage.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/VismaLogo.js","webpack:///./src/components/layout/Header.js","webpack:///./src/components/layout/Layout.js","webpack:///./src/components/program/EventMetaData.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["__webpack_exports__","_ref","dag","event","data","weekday","DateTime","fromISO","frontmatter","from","setLocale","toFormat","charAt","toUpperCase","slice","formatTime","time","to","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout_Layout__WEBPACK_IMPORTED_MODULE_3__","style","color","title","_components_program_EventMetaData__WEBPACK_IMPORTED_MODULE_5__","dangerouslySetInnerHTML","__html","html","fields","subevents","map","subevent","key","id","className","marginBottom","excerpt","speakers","length","speaker","gatsby_image__WEBPACK_IMPORTED_MODULE_7___default","fixed","thumbnail","childImageSharp","name","query","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","VismaLogo","react_default","gatsby_browser_entry","gatsby_image_default","fileName","_3080975758","Header","_useState","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","layout_VismaLogo","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","siteTitle","defaultProps","Layout","Fragment","layout_Header","role","node","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","EventMetaData","kategori","icon","faUser","faMapMarker","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-templates-event-page-js-1c196f9ab34552883118.js","sourcesContent":["import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/layout/Layout\"\nimport {DateTime} from 'luxon'\nimport EventMetaData from \"../components/program/EventMetaData\";\nimport '../components/graphql/fragments/CommonEventFragment'\nimport Img from \"gatsby-image\"\n\nconst capitalizeFirst = function (dag) {\n    return dag.charAt(0).toUpperCase() + dag.slice(1)\n};\n\nexport default ({data}) => {\n    const {event} = data;\n    const weekday = capitalizeFirst(DateTime.fromISO(event.frontmatter.from).setLocale('nb').toFormat('EEEE'));\n\n    function formatTime(time) {\n        return DateTime.fromISO(time).toFormat('HH:mm');\n    }\n\n    const from = formatTime(event.frontmatter.from);\n    const to = formatTime(event.frontmatter.to);\n    return (\n        <Layout>\n            <div>\n                <h3 style={{color: 'black'}}>{weekday} {from} - {to}</h3>\n                <h2>{event.frontmatter.title}</h2>\n                <EventMetaData {...event.frontmatter} />\n                <div dangerouslySetInnerHTML={{__html: event.html}}/>\n                {event.fields.subevents.map(subevent => {\n                    return (\n                        <div key={subevent.id} className=\"card programpost\" style={{marginBottom: '10px'}}>\n                            <div className=\"card-body\">\n                                {formatTime(subevent.frontmatter.from)} - {formatTime(subevent.frontmatter.to)} {subevent.frontmatter.title}\n                                <EventMetaData {...subevent.frontmatter} />\n                                {subevent.excerpt}\n                            </div>\n                        </div>\n                    )\n                })}\n                {event.fields.speakers.length > 0 && <div>\n                    <h3>About the speaker</h3>\n                    {event.fields.speakers.map(speaker => {\n                        return (\n                            <div className=\"container card\" key={speaker.id}>\n                                <div className=\"row card-body\">\n                                    <div className=\"col-2\">\n                                        <Img fixed={speaker.frontmatter.thumbnail.childImageSharp.fixed}/>\n                                    </div>\n                                    <div className=\"col-8\">\n                                        <h5>{speaker.frontmatter.name}</h5>\n                                        <div dangerouslySetInnerHTML={{__html: speaker.html}}/>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n                }\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        event: markdownRemark(fields: { slug: { eq: $slug } }) {\n            fields {\n                speakers {\n                    id\n                    html\n                    frontmatter {\n                        name\n                        thumbnail {\n                            childImageSharp {\n                                fixed(width: 125, height: 125, cropFocus: NORTH) {\n                                    ...GatsbyImageSharpFixed\n                                }\n                            }\n                        }\n                    }\n                }\n                subevents {\n                    ...CommonEventFragment\n                }\n            }\n            ...CommonEventFragment\n        }\n    }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst VismaLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        fileName: file(relativePath: { eq: \"images/visma-logo-smaller.png\" }) {\n          childImageSharp {\n            fixed(height: 65) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n`}\n    render={data => <Img fixed={data.fileName.childImageSharp.fixed} />}\n  />\n)\nexport default VismaLogo","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport VismaLogo from \"./VismaLogo\";\nimport './navbar-overrides.css'\nimport {Link} from \"gatsby\"\nimport {Nav, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler} from \"reactstrap\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (<Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n            <NavbarBrand href=\"/\">\n                <VismaLogo/>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/\">Hjem <span className=\"sr-only\">(current)</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/program/\">Program</Link>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport './layout.css'\nimport Header from \"./Header\"\n\nconst Layout = ({children}) => {\n    return (\n        <>\n            <Header/>\n            <main role=\"main\" className=\"container\">{children}</main>\n            {/*<footer className=\"container-fluid\">*/}\n            {/*© {new Date().getFullYear()}, Built with*/}\n            {/*{` `}*/}\n            {/*<a href=\"https://www.gatsbyjs.org\">Gatsby</a>*/}\n            {/*</footer>*/}\n        </>\n    );\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMapMarker, faUser} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nconst EventMetaData = ({kategori, speaker, location}) => {\n    return (\n        <ul style={{marginBottom: '10px'}} className=\"list-group list-group-horizontal\">\n            {kategori &&\n            <li className=\"list-group-item list-group-item-primary\">\n                {kategori}\n            </li>}\n            {speaker && <li className=\"list-group-item\">\n                <span className=\"badge\"><FontAwesomeIcon icon={faUser}/></span>\n                {speaker}\n            </li>}\n            {location && <li className=\"list-group-item\">\n                <span className=\"badge\"><FontAwesomeIcon icon={faMapMarker}/></span>\n                {location}\n            </li>}\n        </ul>\n    );\n}\n\nexport default EventMetaData","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}